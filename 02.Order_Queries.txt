-- 1. Count the customers with grades above Bangalore’s average.

SELECT GRADE, COUNT(GRADE) FROM CUSTOMER
    GROUP BY GRADE
    HAVING GRADE >
    (SELECT AVG(GRADE) FROM CUSTOMER
    WHERE CITY='BANGALORE');


-- 2. Find the name and numbers of all salesmen who had more than one customer.

SELECT S.SALESMAN_ID, NAME FROM SALESMAN S
    WHERE SALESMAN_ID IN (SELECT SALESMAN_ID FROM CUSTOMER
    GROUP BY SALESMAN_ID
    HAVING COUNT(*) > 1);
-- or --
SELECT S.SALESMAN_ID, NAME
    FROM SALESMAN S
    WHERE 1 < (SELECT COUNT(*) FROM CUSTOMER
    WHERE S.SALESMAN_ID = SALESMAN_ID);


-- 3. List all salesmen and indicate those who have 
-- and don’t have customers in their cities (Use UNION operation.)

SELECT S.SALESMAN_ID, NAME, CUST_NAME
    FROM SALESMAN S, CUSTOMER C
    WHERE S.SALESMAN_ID = C.SALESMAN_ID
    AND S.CITY = C.CITY
    UNION
    SELECT S1.SALESMAN_ID, NAME, 'NO_MATCH'
    FROM SALESMAN S1
    WHERE S1.CITY NOT IN (SELECT CITY FROM CUSTOMER WHERE S1.SALESMAN_ID = SALESMAN_ID);


-- 4. Create a view that finds the salesman
-- who has the customer with the highest order of a day.

CREATE VIEW V_SALESMAN AS
    SELECT O.ORD_DATE, S.SALESMAN_ID, S.NAME
    FROM SALESMAN S, ORDERS O
    WHERE S.SALESMAN_ID = O.SALESMAN_ID
    AND O.PURCHASE_AMT=(SELECT MAX(PURCHASE_AMT) FROM
    ORDERS WHERE ORD_DATE = O.ORD_DATE);


-- 5. Demonstrate the DELETE operation by removing salesman with id 1000.
-- All his orders must also be deleted.

DELETE FROM SALESMAN WHERE
    SALESMAN_ID = '1000';
